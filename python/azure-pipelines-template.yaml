parameters:
  pythonVersions: ["3.7", "3.6", "3.5"] #, "2.7"]
  operatingSystems: ["ubuntu-16.04", 'macos-10.13', 'vs2017-win2016']

jobs:
- job:
  displayName: 'Python'
  strategy:
    matrix:
      ${{ each py in parameters.pythonVersions }}:
          ${{ each os in parameters.operatingSystems }}:
            ${{ format(' {0} - {1}', py, os) }}:
              imageName: ${{ os }}
              python.version: ${{ py }}

  pool:
    vmImage: $(imageName)

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      cd python
      pip install -e .[test]
    displayName: 'Install Package'

  - script: |
      cd python
      pytest --junitxml=junit/test-unitttest.xml
    displayName: 'Python Unit Tests'
    env:
      myserviceprincipal1: $(test_service_principal_secret)

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-unitttest.xml'
      testRunTitle: 'Test results for PyTest'
